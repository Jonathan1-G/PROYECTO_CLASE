<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        jwAAC48Bt8qPNgAAAgNJREFUSEvFlzFuFTEQhr9IIDpQahDUdJRUOUIOkOtARUWDFDhDBKdAKCcIPaIi
        LUiAEOhbedCsY79dsw+9T1o9v/V4/rU9np2FddwBToFXwCXwBfhZLtves08bbTdzDDwDroHf6foKfCqX
        7dynrWMc+0+cldno7DtwUe49BI6SnW3v2aeNto5xrPdWcxt4XQb/At4A92ujHTwoYxyrD33pcycavCsD
        PgMntcEAjtWHvt4Ct2qDTMz0qjz5VvTxMc28ifsRM92HaKCvmPmNPTcCDQb3Zcvy9tCnvtWYRbvh7xMZ
        FP8Lfauh1oQH3rPnMehF72PgOXC37kjY9xJ4WncUXHI11JqSjNnGJ/EM9ogVed8Rvwd8KDaK91BDGzWn
        VNfc+IRiirbEbYeov60HCyKA1ZzyrH/MPrtoieeZLonKo2Kr5hRp5tucBnvU4iOiosa3ojm9YUz2a8ni
        I6KBWmoOC+flbe35En+FR5a63tN6z5eYLfXa4KpFFar3fEl8FlxrjlNLNBgRnx2nNQnkRUc0yOJmuB6z
        BJJTZu+t9KSIt0QD+8xwptcW+v6RU6Yc5CUhB3stykEKgSBKH8uVfYjn0ue87sxY7FmYxcy3LPtQsSca
        1OXtyOzr8taZLopmegW92acu6L0XBb1HxjHDBX2m9wljvo1PGNu5b/MnTGbvH21/APlL2HnvsyulAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="BtnAgregar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAP
        GAAADxgBeu853wAAAPVJREFUSEvtlj0KwjAYhp9RvICrJ3By0cHRydFVxDt4A0dP5Obk5CJOToKTd/CX
        VxIJtaF/pir2hQe+kC99SkPTwr+mDvSAfmDkkOuRNnAEbiUhl5ysYyZDIydnM9gB08DIIZecz7tYOHse
        KnJY32+JB8DGoDptrPiqQR7xyFmnOm0qcaJ4aOYtW2edandOvb5kFusdtH1JqNcXK75o8NXiaIrucSVO
        naLi3B+JGtAwqE6bwuK8iRWvgFZg5JDrJPHBkZfFXuKJOcKik6GQa2yffReYAXMPy5gL+FBvdL1Fjo6z
        54l515GZOR8TN2N+zn2ot8pL7iv5RtAeaTupAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>