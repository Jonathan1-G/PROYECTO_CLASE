<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        jwAAC48Bt8qPNgAAAgNJREFUSEvFlzFuFTEQhr9IIDpQahDUdJRUOUIOkOtARUWDFDhDBKdAKCcIPaIi
        LUiAEOhbedCsY79dsw+9T1o9v/V4/rU9np2FddwBToFXwCXwBfhZLtves08bbTdzDDwDroHf6foKfCqX
        7dynrWMc+0+cldno7DtwUe49BI6SnW3v2aeNto5xrPdWcxt4XQb/At4A92ujHTwoYxyrD33pcycavCsD
        PgMntcEAjtWHvt4Ct2qDTMz0qjz5VvTxMc28ifsRM92HaKCvmPmNPTcCDQb3Zcvy9tCnvtWYRbvh7xMZ
        FP8Lfauh1oQH3rPnMehF72PgOXC37kjY9xJ4WncUXHI11JqSjNnGJ/EM9ogVed8Rvwd8KDaK91BDGzWn
        VNfc+IRiirbEbYeov60HCyKA1ZzyrH/MPrtoieeZLonKo2Kr5hRp5tucBnvU4iOiosa3ojm9YUz2a8ni
        I6KBWmoOC+flbe35En+FR5a63tN6z5eYLfXa4KpFFar3fEl8FlxrjlNLNBgRnx2nNQnkRUc0yOJmuB6z
        BJJTZu+t9KSIt0QD+8xwptcW+v6RU6Yc5CUhB3stykEKgSBKH8uVfYjn0ue87sxY7FmYxcy3LPtQsSca
        1OXtyOzr8taZLopmegW92acu6L0XBb1HxjHDBX2m9wljvo1PGNu5b/MnTGbvH21/APlL2HnvsyulAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="BtnAgregar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAP
        GAAADxgBeu853wAAAPVJREFUSEvtlj0KwjAYhp9RvICrJ3By0cHRydFVxDt4A0dP5Obk5CJOToKTd/CX
        VxIJtaF/pir2hQe+kC99SkPTwr+mDvSAfmDkkOuRNnAEbiUhl5ysYyZDIydnM9gB08DIIZecz7tYOHse
        KnJY32+JB8DGoDptrPiqQR7xyFmnOm0qcaJ4aOYtW2edandOvb5kFusdtH1JqNcXK75o8NXiaIrucSVO
        naLi3B+JGtAwqE6bwuK8iRWvgFZg5JDrJPHBkZfFXuKJOcKik6GQa2yffReYAXMPy5gL+FBvdL1Fjo6z
        54l515GZOR8TN2N+zn2ot8pL7iv5RtAeaTupAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        r7Lt15oYGQAAAABJRU5ErkJggg==
</value>
  </data>
</root>